---
version: "3.9"
services:
  mainnetwork:
    image: alpine:3.14.0
    command: ["tail", "-f", "/dev/null"]
  db:
    image: postgres:12-alpine
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql/data
      - ./db/script:/script:ro
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
  backend:
    image: python:3.8.5
    working_dir: /app
    command: ["./dev.sh"]
    volumes:
      - ./backend:/app:delegated
    environment:
      - DATABASE_URL=postgresql://siwins:password@db:5432/siwins
      - AUTH0_CLIENT=$AUTH0_CLIENT
      - AUTH0_USER=$AUTH0_USER
      - AUTH0_PWD=$AUTH0_PWD
      - MAILJET_SECRET=${MAILJET_SECRET}
      - MAILJET_APIKEY=${MAILJET_APIKEY}
    depends_on:
      db:
        condition: service_healthy
    network_mode: service:mainnetwork
  frontend:
    image: akvo/akvo-node-18-alpine:20220923.084347.0558ee6
    working_dir: /app
    command: ["./start.sh"]
    volumes:
      - ./frontend:/app:delegated
    network_mode: service:mainnetwork
volumes:
  pg-data:
